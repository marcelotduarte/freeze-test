name: CI test using development packages

on:
  workflow_dispatch:

jobs:

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12-dev"]
      fail-fast: false
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ ${{ matrix.python-version }} == *-dev ]] ; then
            pip install -r requirements.txt --pre
            pip install --upgrade wheel
            pip install -v -e .[test] --no-build-isolation
          else
            pip install -v -e .[test]
          fi

      - name: Use the distributed executables
        run: |
          # This is important for manylinux, macOS and python-dev
          mkdir -p wheelhouse
          pip download cx_Freeze --extra-index-url https://marcelotduarte.github.io/packages/ --pre --no-deps -d wheelhouse
          unzip -o wheelhouse/cx_Freeze*.whl "cx_Freeze/bases/*" -x "*.py"

      - name: Generate coverage report
        run: >-
          python -m pytest -o pythonpath=cx_Freeze/bases/lib-dynload/
          --cov="cx_Freeze"
          --cov-report=html:./build/coverage
          --cov-report=xml

      - name: Upload the cov-report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.os }}
          path: ./build/coverage/*
