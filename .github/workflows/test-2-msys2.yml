name: Test-2-msys2

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  matrix:
    name: Generate matrix of samples
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      -
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      -
        id: set-matrix
        run: echo "matrix=$(python ci/_platform.py mingw)" >> $GITHUB_OUTPUT

  tests:
    needs: [matrix]
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(needs.matrix.outputs.matrix) }}
        sys: [ ucrt64, mingw64, mingw32 ]
        exclude:
          - sample: pyqt6
            sys: mingw32
          - sample: pyside6
            sys: mingw32
    name: ${{ matrix.sample }}-${{ matrix.sys }}
    env:
      PACKAGES: https://marcelotduarte.github.io/packages
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          pacboy: >-
            python-pip:p
            python-cx-logging:p
            python-lief:p
          update: true
      -
        name: Install from package
        run: |
          VERSION=$(grep "__version__ = " cx_Freeze/__init__.py | sed 's/-/./' | awk -F\" '{print $2}')
          NAME=${MINGW_PACKAGE_PREFIX}-python-cx-freeze-${VERSION}-1-any.pkg.tar.zst
          curl ${{ env.PACKAGES }}/mingw/${NAME} -O
          pacman --noconfirm --needed -U ${NAME}
      -
        name: Freeze and run "${{ matrix.sample }}"
        id: freeze-and-run
        run: |
          ./ci/build-test-one.sh ${{ matrix.sample }} --debug
          echo "status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      -
        name: Collect images and logs
        working-directory: samples/${{ matrix.sample }}
        run: mv build/*/*.{err,log,png} . || true
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v3
        with:
          name: screensnapshots
          path: |
            ./samples/${{ matrix.sample }}/*.err
            ./samples/${{ matrix.sample }}/*.log
            ./samples/${{ matrix.sample }}/*.png
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
