name: CI

on:
  workflow_dispatch:
    inputs:
      branch:
        default: develop
        required: true
        type: choice
        options:
          - develop
          - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheel:
    name: Build wheels
    uses: ./.github/workflows/build-wheel.yml
    with:
      branch: ${{ inputs.branch }}
      extra_platforms: true

  tests:
    needs: build_wheel
    runs-on: ${{ matrix.os }}-${{ matrix.os_version }}
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        os_version: [latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.13t']
        include:
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.9'
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.10'
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.11'
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.12'
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.13'
          - os: ubuntu
            os_version: 24.04-arm
            python-version: '3.13t'
          - os: windows
            os_version: 11-arm
            python-version: '3.11'
          - os: windows
            os_version: 11-arm
            python-version: '3.12'
          - os: windows
            os_version: 11-arm
            python-version: '3.13'
        exclude:
          - os: windows
            os_version: latest
            python-version: '3.13t'  # provisional
      fail-fast: false
    defaults:
      run:
        shell: bash
    env:
      UV_NO_PROGRESS: true
    steps:

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -qy alien fakeroot rpm

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          repository: marcelotduarte/cx_Freeze
          sparse-checkout: |
            pyproject.toml
            samples
            tests

      - name: List files
        run: find . -name '*' -print

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          cache-dependency-glob: "pyproject.toml"
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Env
        run: env | sort

      - name: Sysconfig
        run: uv run --no-project -m sysconfig

      - name: platform
        run: uv run --no-project -m platform

      - name: platform machine
        run: uv run --no-project python -c "import platform; print(platform.machine())"

      - name: Download the wheel
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: cx-freeze-whl-${{ matrix.os }}*
          path: wheelhouse

      - name: Install dependencies to test
        run: |
          uv pip install --extra tests --upgrade -r pyproject.toml
          uv pip install cx_Freeze -f wheelhouse \
              --no-build --no-deps --no-index --prerelease=allow --reinstall

      - name: Generate coverage report
        env:
          COVERAGE_FILE: ".coverage.${{ strategy.job-index }}"
        run: uv run --no-project pytest -nauto --cov="cx_Freeze"

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: cov-${{ matrix.python-version }}.${{ matrix.os }}-${{ strategy.job-index }}
          path: .coverage.*
          include-hidden-files: true

  build_msys2:
    name: Build msys2
    uses: ./.github/workflows/build-packages-msys2.yml
    with:
      branch: ${{ inputs.branch }}

  tests_msys2:
    needs: build_msys2
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:

      - name: Download msys2 artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cx-freeze-msys2-*
          merge-multiple: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: cov-msys2
          path: .coverage.*
          include-hidden-files: true

  coverage:
    needs:
      - tests
      - tests_msys2
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          repository: marcelotduarte/cx_Freeze

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: cov-*
          merge-multiple: true

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
