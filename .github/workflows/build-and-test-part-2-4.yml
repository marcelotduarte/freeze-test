name: 2.4-Tests 5 samples

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  matrix:
    name: Generate matrix of samples
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      -
        id: set-matrix
        run: |
          import json
          with open("ci/build-test.json") as fp:
              data = json.load(fp)
          samples = ["pandas", "pyqt5", "pyside2", "pyzmq", "sqlite"]
          samples = ["pyqt5"]
          samples = json.dumps(samples)
          print(samples)
          print(f"::set-output name=matrix::{samples}")
        shell: python

  tests:
    needs: [matrix]
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(needs.matrix.outputs.matrix) }}
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x64]
        branch: [develop]
    name: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore wheelhouse from cache
        uses: actions/cache@v2
        with:
          path: wheelhouse/*
          key: wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('**/*.py', '**/*.c', '**/*.rst') }}
          restore-keys: wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-
      -
        name: Freeze and run "${{ matrix.sample }}"
        run: |
          #export QT_DEBUG_PLUGINS=1
          ./ci/build-test-one.sh ${{ matrix.sample }}
        shell: bash
        continue-on-error: true
      -
        name: raw test
        run: |
          ls -l
          if [ "${{ matrix.sample }}" == "pyqt5" ] ; then
            cd cx_Freeze/samples/${{ matrix.sample }}
            python test_pyqt5.py &
          fi
        shell: bash
