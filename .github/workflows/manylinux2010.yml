name: Create manylinux2010 v2

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:

  build:
    strategy:
      matrix:
        platform: ["x86_64"]
    name: Build manylinux docker image
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: 4117e7c197a85a536ff90123e52c9c6f7d30780e
          repository: pypa/manylinux
      -
        name: Patch the build scripts
        env:
          SCRIPTS: docker/build_scripts
        run: |
          sed -i 's/xargs -0 rm -f/xargs -0 ls -l/g' $SCRIPTS/build.sh
          sed -i 's/2.7.18 3.5.10 //g' $SCRIPTS/build_env.sh
          sed -i 's/--disable-shared/--enable-shared LDFLAGS=\"-Wl,-rpath ${prefix}\/lib\"/g' $SCRIPTS/build_utils.sh
          mkdir -p /tmp/docker
      -
        name: Cache docker image
        uses: actions/cache@v2
        id: cache
        with:
          key: ${{ matrix.platform }}-${{ hashFiles('docker/build_scripts/build_env.sh') }}
          path: /tmp/docker
      -
        name: Build docker image and save on the cache
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          PLATFORM: ${{ matrix.platform }}
          IMAGE_NAME: manylinux2010_${{ matrix.platform }}
          DOCKERFILE: docker/Dockerfile-${{ matrix.platform }}
        run: |
          docker build --rm -t $IMAGE_NAME -f $DOCKERFILE docker/
          docker save -o /tmp/docker/${IMAGE_NAME}.tar $IMAGE_NAME:latest
      -
        name: Save the cache key
        run: |
          mkdir -p /tmp/docker-key
          echo -n ${{ steps.cache.key }} > /tmp/docker-key/${{ matrix.platform }}
      -
        name: Display structure of docker files
        run: ls -l /tmp/docker
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-key
          path: /tmp/docker-key/${{ matrix.platform }}
           
  linux:
    needs: build
    strategy:
      matrix:
        platform: ["x86_64"]
    name: Build wheel using manylinux2010
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
          submodules: true
      -
        name: Setup Python
        uses: actions/setup-python@v2
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==1.8.0
      -
        name: Download the artifact with the cache key
        uses: actions/download-artifact@v2
        with:
          name: docker-key
          path: /tmp/docker-key/
      -
        name: Get the cache key
        id: cache-docker
        run: |
          echo ::set-output name=key::$(cat /tmp/docker-key/${{ matrix.platform }})
      -
        name: Show the cache key
        run: |
          echo $(cat /tmp/docker-key/${{ matrix.platform }})
          cat /tmp/docker-key/${{ matrix.platform }}
          echo ${{ steps.cache-docker.outputs.key }})
      -
        name: Get the docker image from cache
        uses: actions/cache@v2
        with:
          key: ${{ steps.cache-docker.outputs.key }}
          path: /tmp/docker
      -
        name: Display structure of docker files
        run: ls -l /tmp/docker
      -
        name: Load the docker image
        env:
          PLATFORM: ${{ matrix.platform }}
          IMAGE_NAME: manylinux2010_${{ matrix.platform }}
        run: docker load -i /tmp/docker/${IMAGE_NAME}.tar
      -
        name: Build the wheel
        env:
          CIBW_BUILD: cp3*-m*_x86_64
          CIBW_SKIP: cp35*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD: pip install -U importlib-metadata && python -m sysconfig
          CIBW_DEPENDENCY_VERSIONS: latest
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010_${{ matrix.platform }}
        run: python -m cibuildwheel --output-dir wheelhouse .
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx_Freeze-wheels
          path: wheelhouse
