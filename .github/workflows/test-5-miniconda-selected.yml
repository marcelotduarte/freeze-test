name: Test-5-miniconda-selected

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        sample:
          - "pyqt5"
          - "pyqt5-simplebrowser"
          - "pyside2"
          - "pyside2-simplebrowser"
        os: [windows-latest]
        python-version: ["3.10"]
        architecture: [x64]
        branch: [develop]
    name: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      KEY_BASE: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
      QT_DEBUG: 1
      QT_DEBUG_PLUGINS: 1
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.KEY_BASE }}
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
      -
        name: Install cx_Freeze development mode
        run: |
          python ci/build_test.py ${{ matrix.sample }} --basic-requirements
          python setup.py develop --no-deps
      -
        name: Freeze and run "${{ matrix.sample }}" (build_exe)
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }}
      -
        name: Freeze and run "${{ matrix.sample }}" (bdist_mac)
        id: freeze-and-run-bdist-mac
        if: startsWith(matrix.os, 'macos')
        env:
          TEST_BDIST_MAC: 2
        run: ./ci/build-test-one.sh ${{ matrix.sample }}
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: |
          mv build/*/*.{png,log} . || true
          (python -m sysconfig > $KEY_BASE-sysconfig.log) || true
          (tar cvf $KEY_BASE-build.tar build/exe.*/) || true
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
            ./cx_Freeze/samples/${{ matrix.sample }}/*.tar
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash
