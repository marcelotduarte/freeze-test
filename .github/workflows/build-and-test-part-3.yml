name: 3-Test using MSYS2

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  matrix:
    name: Generate matrix of samples
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
      -
        id: set-matrix
        run: |
          import json
          with open("ci/build-test.json") as fp:
              data = json.load(fp)
          samples = json.dumps(list(data.keys()))
          print(f"::set-output name=matrix::{samples}")
        shell: python

  tests:
    needs: [matrix]
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(needs.matrix.outputs.matrix) }}
        sys: [ { msystem: MINGW32, arch: i686 }, { msystem: MINGW64, arch: x86_64 }, { msystem: UCRT64, arch: ucrt-x86_64 } ]
    name: ${{ matrix.sample }}-${{ matrix.sys.msystem }}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys.msystem }}
          install: >-
            mingw-w64-${{ matrix.sys.arch }}-toolchain
            mingw-w64-${{ matrix.sys.arch }}-python-pip
            mingw-w64-${{ matrix.sys.arch }}-python-setuptools
            mingw-w64-${{ matrix.sys.arch }}-python-wheel
            mingw-w64-${{ matrix.sys.arch }}-python-importlib-metadata
            mingw-w64-${{ matrix.sys.arch }}-python-cx-logging
      -
        name: Build the wheel
        run: pip install . --no-deps -v
      -
        name: Freeze and run "${{ matrix.sample }}"
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} || echo "::set-output name=status::$?"
      -
        name: Collect images and logs
        run: |
          cd cx_Freeze/samples/${{ matrix.sample }}
          mv build/*/*.png . || true
          mv build/*/*.log . || true
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
      -
        name: Status
        run: exit ${{ steps.freeze-and-run.outputs.status }}
