name: 2.1-Test cxfreeze script

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
        branch: [develop]
    name: cxfreeze-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore wheelhouse from cache
        uses: actions/cache@v2
        with:
          path: wheelhouse/*
          key: wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('**/*.py', '**/*.c', '**/*.rst') }}
          restore-keys: wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U importlib-metadata setuptools wheel
          pip install --no-index -f wheelhouse cx-freeze --no-deps
      -
        run: python -m sysconfig
      -
        run: cxfreeze --version
      -
        name: Freeze simple sample (2-different target-name)
        working-directory: cx_Freeze/samples/simple
        run: cxfreeze hello.py --silent --target-name Hello-0.1 --target-dir build
      -
        name: Run simple sample (2-different target-name)
        working-directory: cx_Freeze/samples/simple/build
        run: ./Hello-0.1.exe
