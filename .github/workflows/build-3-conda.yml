name: Build-3-conda

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  recipe:
    name: Generate recipe
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
          path: cx_Freeze
      -
        uses: actions/setup-python@v2
      -
        name: Prepare recipe
        id: recipe
        run: |
          pushd cx_Freeze/cx_Freeze
          VERSION=$(grep "__version__ = " __init__.py | sed 's/-/./' | awk -F\" '{print $2}')
          popd
          pushd recipe
          sed -i "/set version/c\{% set version = \"$VERSION\" %}" meta.yaml
          sed -i '/url:/c\  git_url: https://github.com/marcelotduarte/cx_Freeze.git' meta.yaml
          sed -i '/sha256:/c\  git_rev: develop' meta.yaml
          sed -i '/number:/c\  number: 0' meta.yaml
          echo "::set-output name=data::{\"meta\":\"$(cat meta.yaml)\"}"
          popd
          git diff
      -
        name: Upload recipe
        uses: actions/upload-artifact@v2
        with:
          name: recipe
          path: recipe/meta.yaml
    outputs:
      data: ${{ steps.recipe.outputs.data }}

  build_linux_64:
    needs: [recipe]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.8"]
        architecture: [x64]
    name: Build ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      KEY_BASE: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        name: Update recipe
        uses: actions/download-artifact@v2
        with:
          name: recipe
          path: .
      -
        run: ls -l
      -
        run: echo ${{ needs.recipe.outputs.data }}
      -
        name: Up
        run: echo ${{ fromJSON(needs.recipe.outputs.data) }} > meta.tmp
      -
        run: ls -l
      -
        name: Build the conda package
        run: echo ""
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-conda
          path: ./*/cx_freeze*.tar.bz2

  build_osx_64_and_win_64:
    needs: [recipe]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        #python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.8"]
        architecture: [x64]
    name: Build ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      KEY_BASE: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        name: Download recipe
        uses: actions/download-artifact@v2
        with:
          name: recipe
          path: recipe/meta.yaml
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: freeze-${{ env.KEY_BASE }}
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
      -
        run: conda info
      -
        run: conda install -c conda-forge conda-build
      -
        name: Build the conda package
        run: conda build -c conda-forge recipe --output-folder .
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-conda
          path: ./*/cx_freeze*.tar.bz2
