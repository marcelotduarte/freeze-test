name: Build-3-conda

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  conda_recipe:
    name: Generate recipe
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
          path: recipe/cx_Freeze
      -
        name: Prepare recipe
        id: recipe
        working-directory: recipe
        run: |
          pushd cx_Freeze/cx_Freeze
          VERSION=$(grep "__version__ = " __init__.py | sed 's/-/./' | awk -F\" '{print $2}')
          popd
          sed -i "/set version/c\{% set version = \"$VERSION\" %}" meta.yaml
          sed -i '/number:/c\  number: 0' meta.yaml
          sed -i '/url:/c\  git_url: https://github.com/marcelotduarte/cx_Freeze.git' meta.yaml
          sed -i '/sha256:/c\  git_rev: develop' meta.yaml
          echo "::set-output name=meta::$(base64 --wrap=0 meta.yaml)"
          cp meta.yaml meta_path.yaml
          sed -i '/git_url:/c\  path: ./cx_Freeze' meta_path.yaml
          sed -i '/git_rev:/c\  #' meta_path.yaml
          echo "::set-output name=meta_path::$(base64 --wrap=0 meta_path.yaml)"
          git diff
      -
        name: List 'unix' configurations
        id: unix
        run: |
          CONFIGS=""
          for CONFIG in .ci_support/linux_*.yaml; do
            name=${CONFIG:12:-5}
            python_and_version=$(echo $name|awk -F_ '{print $3}')
            version="${python_and_version:8:-1}"
            CONFIGS="${CONFIGS}{\"name\":\"${name}\",\"version\":\"${version}\",\"os\":\"ubuntu\"}, "
          done
          for CONFIG in .ci_support/osx_*.yaml; do
            name=${CONFIG:12:-5}
            python_and_version=$(echo $name|awk -F_ '{print $3}')
            version="${python_and_version:6:-1}"
            CONFIGS="${CONFIGS}{\"name\":\"${name}\",\"version\":\"${version}\",\"os\":\"macos\"}, "
          done
          echo "::set-output name=config::[${CONFIGS::-2}]"
      -
        name: List 'windows' configurations
        id: win
        run: |
          CONFIGS=""
          for CONFIG in .ci_support/win_*.yaml; do
            name=${CONFIG:12:-5}
            python_and_version=$(echo $name|awk -F_ '{print $3}')
            version="${python_and_version:6:-1}"
            CONFIGS="${CONFIGS}{\"name\":\"${name}\",\"version\":\"${version}\",\"os\":\"windows\"}, "
          done
          echo "::set-output name=config::[${CONFIGS::-2}]"
    outputs:
      data: ${{ steps.recipe.outputs.meta }}
      data_path: ${{ steps.recipe.outputs.meta_path }}
      unix: ${{ steps.unix.outputs.config }}
      win: ${{ steps.win.outputs.config }}

  build_conda_unix:
    needs: [conda_recipe]
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(needs.conda_recipe.outputs.unix) }}
    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}-latest
    steps:
      -
        uses: actions/setup-python@v2
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
          path: recipe/cx_Freeze
      -
        name: Update recipe
        working-directory: recipe
        run: echo ${{ needs.conda_recipe.outputs.data_path }} | base64 -d>meta.yaml
      -
        run: cat recipe/meta.yaml
      -
        name: Build the conda package
        run: python build-locally.py ${{ matrix.config.name }}
      -
        name: Move to build_artifacts
        if: matrix.config.os == 'macos'
        run: |
          mkdir -p build_artifacts
          mv miniforge3/conda-bld/* build_artifacts/
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-conda
          path: ./build_artifacts/*/cx_freeze*.tar.bz2

  build_conda_windows:
    needs: [conda_recipe]
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(needs.conda_recipe.outputs.win) }}
    name: Build ${{ matrix.config.name }}
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ${{ matrix.config.os }}-latest
    steps:
      -
        uses: actions/checkout@v2
        with:
          repository: marcelotduarte/cx_freeze-feedstock
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: freeze-${{ matrix.config.name }}
          python-version: ${{ matrix.config.version }}
          #architecture: ${{ matrix.architecture }}
          channels: conda-forge
      -
        run: conda info
      -
        run: conda install -c conda-forge conda-build
      -
        name: Update recipe
        working-directory: recipe
        run: echo ${{ needs.conda_recipe.outputs.data }} | base64 -d>meta.yaml
      -
        name: Build the conda package
        run: |
          mkdir -p build_artifacts
          conda build -c conda-forge recipe --output-folder build_artifacts
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-conda
          path: ./build_artifacts/*/cx_freeze*.tar.bz2
