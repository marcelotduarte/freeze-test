name: Build-3-conda

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  build_cx_logging:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        #python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.9"]
        architecture: [x64]
    name: Build cx_logging package ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      OS_PY_ARCH: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: wheel
          repository: marcelotduarte/cx_logging-feedstock
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: freeze-${{ env.OS_PY_ARCH }}
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
      -
        name: Variables
        run: |
          declare || true
          python -m sysconfig
      -
        name: Set variable CONDA_BLD
        run: echo "::set-output name=CONDA_BLD::$CONDA_PREFIX/conda-bld"
        id: conda
      -
        name: Set variable BASE_PLATFORM
        run: |
          import sysconfig
          platform = sysconfig.get_platform()
          python_version = sysconfig.get_python_version()
          print("::set-output name=BASE_PLATFORM::{platform}-{python_version}")
        shell: python
        id: vars
      -
        uses: actions/cache@v2
        with:
          key: wheelhouse-${{ steps.vars.outputs.BASE_PLATFORM }}-${{ github.sha }}
          path: ${{ steps.conda.outputs.CONDA_BLD }}/*/*.tar.bz2
      -
        name: Install conda-build
        run: |
          echo "::group::conda info"
          conda info
          echo "::endgroup::"
          echo "::group::Install conda-build"
          conda install conda-build
          echo "::endgroup::"
      -
        name: Build the conda package
        run: |
          conda build recipe
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx_logging-conda
          path: ${{ steps.conda.outputs.CONDA_BLD }}/*/*.tar.bz2
  build:
    needs: build_cx_logging
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
        #python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.9"]
        architecture: [x64]
    name: Build package ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      OS_PY_ARCH: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: cx_logging
          repository: marcelotduarte/cx_freeze-feedstock
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: freeze-${{ env.OS_PY_ARCH }}
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
      -
        name: Set variable CONDA_BLD
        run: echo "::set-output name=CONDA_BLD::$CONDA_PREFIX/conda-bld"
        id: conda
      -
        name: Set variable BASE_PLATFORM
        run: |
          import sysconfig
          platform = sysconfig.get_platform()
          python_version = sysconfig.get_python_version()
          print(f"::set-output name=BASE_PLATFORM::{platform}-{python_version}")
        shell: python
        id: vars
      -
        uses: actions/cache@v2
        with:
          key: wheelhouse-${{ steps.vars.outputs.BASE_PLATFORM }}-${{ github.sha }}
          path: ${{ steps.conda.outputs.CONDA_BLD }}/*/*.tar.bz2
      -
        name: Install conda-build
        run: |
          echo "::group::conda info"
          conda info
          echo "::endgroup::"
          echo "::group::Install conda-build"
          conda install conda-build
          echo "::endgroup::"
          echo "::group::cx_Logging"
          pip install -U cx_Logging
          echo "::endgroup::"
      -
        name: Build the conda package
        run: |
          conda build recipe
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-conda
          path: ${{ steps.conda.outputs.CONDA_BLD }}/*/*.tar.bz2
