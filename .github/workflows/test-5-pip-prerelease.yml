name: Test-5-wheels using 3.11 b3

on:
  workflow_dispatch:

jobs:
  matrix:
    name: Generate matrix of samples
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      -
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v3
      -
        id: set-matrix
        run: |
          import json
          with open("ci/build-test.json") as fp:
              data = json.load(fp)
          samples = json.dumps(list(data.keys()))
          print(samples)
          print(f"::set-output name=matrix::{samples}")
        shell: python

  tests:
    needs: [matrix]
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(needs.matrix.outputs.matrix) }}
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11.0-beta.3"]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
          - os: ubuntu-latest
            sample: pythonnet-demo
          - os: windows-latest
            sample: pythonnet-demo
          - os: macos-latest
            sample: pythonnet-demo
          - os: ubuntu-latest
            sample: service
          - os: macos-latest
            sample: service
          - os: ubuntu-latest
            sample: matplotlib
        branch: [develop]
    name: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      -
        name: Install Linux libraries
        if: runner.os == 'Linux'
        run: >-
          sudo apt-get install -y
          libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4
          libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0
          libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          libsdl2-2.0-0
          libegl1 libgconf-2-4
          imagemagick-6.q16
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Change requirements
        if: runner.os == 'Windows'
        run: |
          sed -i "s/ and python_version <= '3.10'/ /g" requirements.txt
          #pip install --pre -f https://lief.s3-website.fr-par.scw.cloud/latest/lief lief
      -
        name: Freeze and run "${{ matrix.sample }}"
        id: freeze-and-run
        env:
          QT_DEBUG_PLUGINS: 1
          PIP_PRE: ${{startsWith(matrix.python-version, '3.11') }}
          PIP_ONLY_BINARY: lief,numpy,pandas,PySide2,PySide6,PyQt5
          PIP_EXTRA_INDEX_URL: https://riverbankcomputing.com/pypi/simple/
          PIP_FIND_LINKS: https://lief.s3-website.fr-par.scw.cloud/latest/lief
        run: ./ci/build-test-one.sh ${{ matrix.sample }}
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash
