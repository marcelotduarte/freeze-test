name: Test-4-numpy+mkl (Windows)

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  test1:
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        architecture: [x64]
    name: root-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore numpy+mkl from cache
        uses: actions/cache@v2
        with:
          key: wheelhouse-numpy-${{ matrix.python-version }}-${{ github.sha }}
          path: wheelhouse
          restore-keys: wheelhouse-numpy-${{ matrix.python-version }}-
      -
        run: python -m sysconfig
      -
        name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: |
          echo "::group::Install dependencies"
          pip install -f wheelhouse numpy --no-index
          echo "::endgroup::"
          ./ci/build-test-one.sh ${{ matrix.sample }}
        continue-on-error: true
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash

  test2:
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        architecture: [x64]
    name: venv-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore numpy+mkl from cache
        uses: actions/cache@v2
        with:
          key: wheelhouse-numpy-${{ matrix.python-version }}-${{ github.sha }}
          path: wheelhouse
          restore-keys: wheelhouse-numpy-${{ matrix.python-version }}-

      -
        name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        run: |
          echo "::group::Create venv with dependencies"
          python -m venv venv
          source venv/scripts/activate
          pip install -f wheelhouse numpy --no-index
          echo "::endgroup::"
          ./ci/build-test-one.sh ${{ matrix.sample }}
        continue-on-error: true
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      #    path: ./cx_Freeze/samples/pandas/build/*/**
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash
