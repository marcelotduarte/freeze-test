name: Test-4-numpy+mkl (Windows)

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  test1:
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    defaults:
      run:
        shell: bash
    env:
      PIP_PRE: ${{startsWith(matrix.python-version, '3.12') }}
      PIP_ONLY_BINARY: numpy,pandas
    name: root-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze

      - uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - run: python -m sysconfig

      - name: Install mkl requirements
        run: pip install mkl

      - name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: |
          ./ci/build-test-one.sh ${{ matrix.sample }} --debug
          echo "status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Collect images and logs
        working-directory: samples/${{ matrix.sample }}
        run: mv build/*/*.{err,png,log} . || true

      - name: Upload the snapshots and logs
        uses: actions/upload-artifact@v3
        with:
          name: screensnapshots
          path: |
            ./samples/${{ matrix.sample }}/*.err
            ./samples/${{ matrix.sample }}/*.log
            ./samples/${{ matrix.sample }}/*.png
          if-no-files-found: ignore

      - name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi

  test2:
    needs: [test1]
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        architecture: [x64]
    env:
      PIP_PRE: ${{startsWith(matrix.python-version, '3.12') }}
      PIP_ONLY_BINARY: numpy,pandas
    name: venv-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze

      - uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - run: python -m sysconfig

      - name: Install mkl requirements
        run: pip install mkl

      - name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: |
          ./ci/build-test-one.sh ${{ matrix.sample }} --debug --venv
          echo "status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Collect images and logs
        working-directory: samples/${{ matrix.sample }}
        run: mv build/*/*.{err,png,log} . || true

      - name: Upload the snapshots and logs
        uses: actions/upload-artifact@v3
        with:
          name: screensnapshots
          path: |
            ./samples/${{ matrix.sample }}/*.err
            ./samples/${{ matrix.sample }}/*.log
            ./samples/${{ matrix.sample }}/*.png
          if-no-files-found: ignore

      - name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
