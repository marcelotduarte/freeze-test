name: Test-4-numpy+mkl (Windows)

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

env:
  PIP_ONLY_BINARY: numpy,pandas
  NUMPY_LINK: https://github.com/cgohlke/numpy-mkl-wheels/releases/download/v2024.1.3
  VERSION: 1.26.3

jobs:
  test1:
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name: root-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v5
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze

      - uses: actions/setup-python@v6
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - run: python -m sysconfig

      - name: Install numpy+mkl requirements
        run: |
          PY_VERSION_NODOT=$(echo ${{ matrix.python-version }}|sed 's/\.//')
          CP3x="cp${PY_VERSION_NODOT}"
          pip install --upgrade setuptools
          pip install $NUMPY_LINK/numpy-$VERSION-$CP3x-$CP3x-win_amd64.whl

      - name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} --debug --deps=d

      - name: Collect images and logs
        if: ${{ always() }}
        working-directory: samples/${{ matrix.sample }}
        run: |
          mkdir ${{ matrix.sample }}-${{ matrix.os }}
          cp build/exe.*/*.{err,log,png} ${{ matrix.sample }}-${{ matrix.os }} || true

      - name: Upload the logs (and screenshots)
        if: ${{ always() }}
        uses: actions/upload-artifact@v5
        with:
          name: logs-root-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./samples/${{ matrix.sample }}/${{ matrix.sample }}-${{ matrix.os }}/**
          if-no-files-found: ignore

  test2:
    needs: [test1]
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        architecture: [x64]
    defaults:
      run:
        shell: bash
    name: venv-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v5
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze

      - name: Set up Python ${{ matrix.python-version }}
        uses: marcelotduarte/setup-python-uv-action@new
        with:
          cache: 'packages'
          python-version: ${{ matrix.python-version }}

      - run: python -m sysconfig

      - name: Install numpy+mkl requirements
        run: |
          PY_VERSION_NODOT=$(echo ${{ matrix.python-version }}|sed 's/\.//')
          CP3x="cp${PY_VERSION_NODOT}"
          uv pip install --upgrade setuptools
          uv pip install $NUMPY_LINK/numpy-$VERSION-$CP3x-$CP3x-win_amd64.whl

      - name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} --debug --deps=d

      - name: Collect images and logs
        if: ${{ always() }}
        working-directory: samples/${{ matrix.sample }}
        run: |
          mkdir ${{ matrix.sample }}-${{ matrix.os }}
          cp build/exe.*/*.{err,log,png} ${{ matrix.sample }}-${{ matrix.os }} || true

      - name: Upload the logs (and screenshots)
        if: ${{ always() }}
        uses: actions/upload-artifact@v5
        with:
          name: logs-venv-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./samples/${{ matrix.sample }}/${{ matrix.sample }}-${{ matrix.os }}/**
          if-no-files-found: ignore
