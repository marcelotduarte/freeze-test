name: Test-4-numpy+mkl (Windows)

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  test1:
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11-dev"]
        architecture: [x64]
    name: root-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      LINK: https://download.lfd.uci.edu/pythonlibs/archived
      LINK_LIEF: https://lief.s3-website.fr-par.scw.cloud/latest/lief
      NUMPY_VER: 1.22.4+mkl
      PIP_PRE: ${{startsWith(matrix.python-version, '3.11') }}
      PIP_ONLY_BINARY: numpy,pandas
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        run: python -m sysconfig
      -
        name: Make dir
        run: mkdir -p wheelhouse
      -
        name: Restore numpy+mkl from cache
        id: cache
        uses: actions/cache@v2
        with:
          key: ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-${{ matrix.python-version }}
          path: wheelhouse
      -
        name: Download the package
        if: matrix.python-version == '3.8' && steps.cache.outputs.cache-hit != 'true'
        working-directory: wheelhouse
        run: curl ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-cp38-cp38-win_amd64.whl -O
      -
        name: Download the package
        if: matrix.python-version == '3.9' && steps.cache.outputs.cache-hit != 'true'
        working-directory: wheelhouse
        run: curl ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-cp39-cp39-win_amd64.whl -O
      -
        name: Download the package
        if: matrix.python-version == '3.10' && steps.cache.outputs.cache-hit != 'true'
        working-directory: wheelhouse
        run: curl ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-cp310-cp310-win_amd64.whl -O
      -
        name: Download the package
        if: startsWith(matrix.python-version, '3.11') && steps.cache.outputs.cache-hit != 'true'
        working-directory: wheelhouse
        run: |
          pip download ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-cp311-cp311-win_amd64.whl --no-deps -d .
          pip download ${{ env.LINK }}/pandas-1.4.3-cp311-cp311-win_amd64.whl --no-deps -d .
          pip download ${{ env.LINK_LIEF }}/lief-0.13.0.dev0-cp311-cp311-win_amd64.whl --no-deps -d .
        shell: bash
      -
        name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }}
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash

  test2:
    needs: [test1]
    strategy:
      fail-fast: false
      matrix:
        sample: [pandas]
        os: [windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11-dev"]
        architecture: [x64]
    name: venv-${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      LINK: https://download.lfd.uci.edu/pythonlibs/archived
      NUMPY_VER: 1.22.4+mkl
      PIP_PRE: ${{startsWith(matrix.python-version, '3.11') }}
      PIP_ONLY_BINARY: numpy,pandas
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v3
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore numpy+mkl from cache
        uses: actions/cache@v2
        with:
          key: ${{ env.LINK }}/numpy-${{ env.NUMPY_VER }}-${{ matrix.python-version }}
          path: wheelhouse
      -
        name: Freeze and run "${{ matrix.sample }}" (numpy+mkl)
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} --venv
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      -
        name: Return sucess or error code
        run: exit ${{ steps.freeze-and-run.outputs.status }}
        shell: bash
