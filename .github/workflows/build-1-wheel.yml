name: Build-1-wheel

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheel:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
    name: Build [${{ matrix.os }} ${{ matrix.architecture }}][Python ${{ matrix.python-version }}]
    runs-on: ${{ matrix.os }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Variables
        run: |
          declare || true
          python -m sysconfig
        shell: bash
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build setuptools
        shell: bash
      -
        name: Build the wheel
        if: runner.os != 'Windows' || matrix.python-version != '3.10'
        run: |
          python -m build -o wheelhouse
        shell: bash
      -
        name: Build the wheel [Windows][Python 3.10]
        if: runner.os == 'Windows' && matrix.python-version == '3.10'
        run: |
          pip install --upgrade wheel
          git clone -b 3.0 https://github.com/anthony-tuininga/cx_Logging.git
          python -m build -o wheelhouse -n ./cx_Logging
          pip install -f wheelhouse cx_Logging
          python -m build -o wheelhouse -n .
        shell: bash
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse/cx_*

  build_msys2:
    strategy:
      fail-fast: false
      matrix:
        sys: [ { msystem: MINGW32, env: i686 }, { msystem: MINGW64, env: x86_64 }, { msystem: UCRT64, env: ucrt-x86_64 }]
    name: Build [${{ matrix.sys.msystem }} ${{ matrix.sys.env }}]
    defaults:
      run:
        shell: msys2 {0}
    runs-on: windows-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys.msystem }}
          install: >-
            dos2unix git
            mingw-w64-${{ matrix.sys.env }}-cc
            mingw-w64-${{ matrix.sys.env }}-tools
            mingw-w64-${{ matrix.sys.env }}-python-setuptools
            mingw-w64-${{ matrix.sys.env }}-python-cx-logging
            mingw-w64-${{ matrix.sys.env }}-python-importlib-metadata
            mingw-w64-${{ matrix.sys.env }}-python-lief
          update: true
      -
        name: Variables
        run: |
          declare || true
          python -m sysconfig
      -
        name: Build the package
        run: |
          dos2unix PKGBUILD
          MINGW_ARCH=${{ matrix.sys.msystem }} makepkg-mingw -sCLf
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: mingw-w64-*.pkg.*

  packages:
    needs: [build_wheel, build_msys2]
    runs-on: ubuntu-20.04
    name: Update packages repository
    steps:
      -
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: marcelotduarte/packages
          token: ${{ secrets.PUSH }}
      -
        name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      -
        name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse
      -
        name: Create packages template
        working-directory: wheelhouse
        run: |
          cp ../make_index.py .
          # cx_Freeze wheels
          mkdir -p cx-freeze
          mv cx_Freeze-* cx-freeze/
          python make_index.py cx-freeze --base cx_Freeze
          # mingw packages
          mkdir -p python-cx-freeze
          mv mingw-*-python-cx-freeze-* python-cx-freeze/
          python make_index.py python-cx-freeze
          # cx_Logging
          mkdir -p cx-logging
          mv cx_Logging-* cx-logging/
          python make_index.py cx-logging --base cx_Logging
          # cleanup
          rm make_index.py
          # template
          VERSION=$(ls cx-freeze | (read name; echo $name) | sed 's/-/ /g' | awk '{print $2}')
          echo -e "## Development packages for cx_Freeze $VERSION\n">index.md
          echo -e "Development wheels for [cx_Freeze](cx-freeze/index.md).\n">>index.md
          echo -e "Development packages for MSYS2 [python-cx-freeze](python-cx-freeze/index.md).\n">>index.md
          echo -e "## Packages for cx_Logging 3.0 \[Windows\]\[Python 3.10\]\n">>index.md
          echo -e "Unofficial wheels for [cx_Logging](cx-logging/index.md).\n">>index.md
          echo "theme: jekyll-theme-architect">_config.yml
      -
        name: Publish cx_Freeze packages
        run: |
          git config user.name "Marcelo Duarte"
          git config user.email marcelotduarte@users.noreply.github.com
          git branch -D gh-pages || true
          git push origin :gh-pages || true
          git checkout --orphan gh-pages
          cp -r wheelhouse/* .
          git add cx-freeze python-cx-freeze cx-logging index.md _config.yml
          git commit -m "Publish cx_Freeze packages"
          git push --set-upstream origin gh-pages
        shell: bash
