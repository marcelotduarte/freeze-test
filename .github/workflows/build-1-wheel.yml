name: Build-1-wheel

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
    name: Build wheel ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      KEY_BASE: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Variables
        run: |
          declare || true
          python -m sysconfig
        shell: bash
      -
        uses: actions/cache@v2
        with:
          key: wheelhouse-${{ env.KEY_BASE }}-${{ github.sha }}
          path: wheelhouse/*
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build setuptools
        shell: bash
      -
        name: Build the wheel
        if: runner.os != 'Windows' || matrix.python-version != '3.10'
        run: |
          python -m build -o wheelhouse
        shell: bash
      -
        name: Build the wheel [Windows][Python 3.10]
        if: runner.os == 'Windows' && matrix.python-version == '3.10'
        run: |
          pip install -U wheel
          git clone -b 3.0 https://github.com/anthony-tuininga/cx_Logging.git
          python -m build -o wheelhouse -n ./cx_Logging
          pip install -f wheelhouse cx_Logging
          python -m build -o wheelhouse -n .
        shell: bash
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse/cx_*
      -
        name: Update the cache with external files [Windows]
        if: runner.os == 'Windows'
        working-directory: wheelhouse
        run: |
          if [ ${{ matrix.architecture }} == x64 ] ; then
            if [ "${{ matrix.python-version }}" == "3.6" ] ; then
              curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/cp36/numpy-1.19.5+mkl-cp36-cp36m-win_amd64.whl -O
            elif [ "${{ matrix.python-version }}" == "3.7" ] ; then
                curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/numpy-1.21.5+mkl-cp37-cp37m-win_amd64.whl -O
            elif [ "${{ matrix.python-version }}" == "3.8" ] ; then
                curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/numpy-1.21.5+mkl-cp38-cp38-win_amd64.whl -O
            elif [ "${{ matrix.python-version }}" == "3.9" ] ; then
                curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/numpy-1.21.5+mkl-cp39-cp39-win_amd64.whl -O
            elif [[ ${{ matrix.python-version }} == 3.10* ]] ; then
              curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/numpy-1.21.5+mkl-cp310-cp310-win_amd64.whl -O
              #curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/Pillow-8.4.0-cp310-cp310-win_amd64.whl -O
              #curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/pandas-1.3.5-cp310-cp310-win_amd64.whl -O
            fi
          else
            if [[ ${{ matrix.python-version }} == 3.10* ]] ; then
              curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/numpy-1.21.5+mkl-cp310-cp310-win32.whl -O
              #curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/Pillow-8.4.0-cp310-cp310-win32.whl -O
              curl https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/pandas-1.3.5-cp310-cp310-win32.whl -O
            fi
          fi
        shell: bash
