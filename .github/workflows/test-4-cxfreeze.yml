name: Test-4-cxfreeze script

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
    name: cxfreeze-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    env:
      KEY_BASE: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Restore wheelhouse from cache
        uses: actions/cache@v2
        with:
          key: wheelhouse-${{ env.KEY_BASE }}-${{ github.sha }}
          path: wheelhouse/*
          restore-keys: wheelhouse-${{ env.KEY_BASE }}-
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install -r requirements.txt
          pip install --no-index -f wheelhouse cx-freeze --no-deps
      -
        run: python -m sysconfig
      -
        run: cxfreeze --version
      -
        name: Freeze simple sample (2-different target-name)
        working-directory: cx_Freeze/samples/simple
        run: |
          cxfreeze hello.py --silent --target-name Hello-0.1 --target-dir build --excludes tkinter
          ls -l
          ls -l build
        shell: bash
      -
        name: Run simple sample (2-different target-name)
        working-directory: cx_Freeze/samples/simple/build
        run: ./Hello-0.1
