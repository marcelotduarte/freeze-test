name: 1-Build wheels

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
    name: Build wheel ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    steps:
      -
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
        id: checkout
      - run: echo "${{ toJson( steps.checkout ) }}"
      -
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        uses: actions/cache@v2
        with:
          path: wheelhouse/*
          key: wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('**/*.py', '**/*.c', '**/*.rst') }}
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U importlib-metadata setuptools wheel
          if [[ ${{ matrix.os }} == windows* ]] ; then
            pip install -U cx_Logging
          fi
        shell: bash
      -
        name: Build the wheel
        run: pip wheel . --no-deps -v --wheel-dir wheelhouse
      -
        name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: cx-freeze-wheelhouse
          path: wheelhouse
