name: Test-5-pyside2-webengine

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.9]
        architecture: [x64]
        sample: [simplebrowser]
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout cx_Freeze
        uses: actions/checkout@v2
        with:
          ref: develop
          repository: marcelotduarte/cx_Freeze
      -
        name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Install Linux libraries
        if: runner.os == 'Linux'
        run: >-
          sudo apt-get install -y
          libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4
          libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0
          libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          libsdl2-2.0-0
          libegl1
          imagemagick-6.q16
      -
        name: Prepare to build
        run: |
          cp cx_Freeze/samples/${{ matrix.sample }}/build-test-simplebrowser.json ci/build-test.json
        shell: bash
      -
        name: Freeze and run "${{ matrix.sample }}"
        id: freeze-and-run
        env:
          QT_DEBUG_PLUGINS: 1
        run: ./ci/build-test-one.sh ${{ matrix.sample }}
        shell: bash
      -
        name: Collect images and logs
        working-directory: cx_Freeze/samples/${{ matrix.sample }}
        run: mv build/*/*.{png,log} . || true
        shell: bash
      -
        name: Upload the snapshots and logs
        uses: actions/upload-artifact@v2
        with:
          name: screensnapshots
          path: |
            ./cx_Freeze/samples/${{ matrix.sample }}/*.png
            ./cx_Freeze/samples/${{ matrix.sample }}/*.log
          if-no-files-found: ignore
      -
        uses: actions/upload-artifact@v2
        with:
          name: site-packages-PySide2-${{ matrix.python-version }}-${{ matrix.os }}
          path: ${{ env.pythonLocation }}/lib/python${{ matrix.python-version }}/site-packages/PySide2/**
      -
        name: Return sucess or error code
        run: |
          if [ "${{ steps.freeze-and-run.outputs.status }}" == "" ] ; then
            exit -1
          else
            exit ${{ steps.freeze-and-run.outputs.status }}
          fi
        shell: bash
