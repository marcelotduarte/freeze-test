on:
  workflow_call:
    inputs:
      branch:
        default: develop
        required: true
        type: string
      python-version:
        default: "3.8-3.11"
        required: false
        type: string
      deps:
        default: "p"
        required: false
        type: string
      bdist:
        required: false
        type: string
      os:
        default: ubuntu-latest
        required: true
        type: string

name: Test-1-wheels
jobs:
  matrix:
    name: Generate matrix of samples
    runs-on: ${{ inputs.os }}
    outputs:
      sample: ${{ steps.get-matrix.outputs.samples }}
      python-version: ${{ steps.get-python.outputs.python-version }}
      branch: ${{ steps.get-python.outputs.branch }}
      deps: ${{ steps.get-python.outputs.deps }}
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          repository: marcelotduarte/cx_Freeze

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - id: get-matrix
        run: echo "samples=$(python ci/_platform.py)" >> $GITHUB_OUTPUT
        shell: bash

      - id: get-python
        run: |
          if [ "${{ inputs.python-version }}" == "${{ inputs.python-version.default }}" ]
          then
            echo 'python-version=["3.8", "3.9", "3.10", "3.11"]' >> $GITHUB_OUTPUT
          else
            echo 'python-version=["${{ inputs.python-version }}"]' >> $GITHUB_OUTPUT
          fi
          if [ "${{ inputs.python-version }}" == "3.7" ]
          then
            echo 'branch=develop615x' >> $GITHUB_OUTPUT
            echo 'deps=d' >> $GITHUB_OUTPUT
          else
            echo 'branch=${{ inputs.branch }}' >> $GITHUB_OUTPUT
            echo 'deps=${{ inputs.deps }}' >> $GITHUB_OUTPUT
          fi
        shell: bash

  tests:
    needs: [matrix]
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(needs.matrix.outputs.sample) }}
        python-version: ${{ fromJSON(needs.matrix.outputs.python-version) }}
        exclude:
          - sample: pyside2
            python-version: "3.11"
          - sample: pyside2-simplebrowser
            python-version: "3.11"
          - sample: pyside2
            python-version: "3.12"
          - sample: pyside2-simplebrowser
            python-version: "3.12"
        branch: ${{ fromJSON(needs.matrix.outputs.branch) }}
        deps: ${{ fromJSON(needs.matrix.outputs.deps) }}
    name: ${{ matrix.sample }}-${{ inputs.os }}-${{ matrix.python-version }}
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          repository: marcelotduarte/cx_Freeze

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Freeze and run "${{ matrix.sample }}"
        env:
          TEST_BDIST: ${{ inputs.bdist }}
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} --debug --venv --deps=${{ matrix.deps }}

      - name: Collect images and logs
        if: ${{ always() }}
        working-directory: samples/${{ matrix.sample }}
        run: |
          mkdir ${{ matrix.sample }}-${{ inputs.os }}
          cp build/exe.*/*.{err,log,png} ${{ matrix.sample }}-${{ inputs.os }} || true
          if [[ ${{ inputs.os }} == macos-* ]]; then
            mkdir ${{ matrix.sample }}-${{ inputs.os }}/app-${{ matrix.python-version }}
            cp build/*.app/Contents/MacOS/*.{err,log,png} ${{ matrix.sample }}-${{ inputs.os }}/app-${{ matrix.python-version }} || true
          fi

      - name: Upload the snapshots and logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: screensnapshots-pip-${{ inputs.os }}
          path: ./samples/${{ matrix.sample }}/${{ matrix.sample }}-${{ inputs.os }}/**
          if-no-files-found: ignore
