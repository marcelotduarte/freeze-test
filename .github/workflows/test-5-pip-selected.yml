name: Test-5-pip-selected

on:
  workflow_dispatch:
    inputs:
      branch:
        default: develop
        required: true
        type: choice
        options:
          - develop
          - develop615x
      version:
        default: "d"
        required: false
        type: choice
        options:
          - ""
          - "d"
          - "e"
          - "l"
      bdist:
        default: ""
        required: false
        type: choice
        options:
          - ""
          - "bdist_mac"
          - "bdist_dmg"

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        sample:
          - pyqt5
          - pyqt5-simplebrowser
          - pyqt6
          - pyqt6-simplebrowser
          - pyside2
          - pyside2-simplebrowser
          - pyside6
          - pyside6-simplebrowser
        os: [macos-latest]
        python-version: ["3.10"]
    name: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout cx_Freeze
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          repository: marcelotduarte/cx_Freeze

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}

      - name: Freeze and run "${{ matrix.sample }}"
        env:
          TEST_BDIST: ${{ inputs.bdist }}
        id: freeze-and-run
        run: ./ci/build-test-one.sh ${{ matrix.sample }} --debug --venv --deps=${{ inputs.version }}

      - name: Collect images and logs
        if: ${{ always() }}
        working-directory: samples/${{ matrix.sample }}
        env:
          KEY_BASE: ${{ matrix.sample }}-${{ matrix.os }}-${{ matrix.python-version }}
        run: |
          (python -m sysconfig > sysconfig-${{ matrix.os }}-${{ matrix.python-version }}.log) || true
          (python -c "import platform; print('platform', platform.platform())" > platform-${{ matrix.os }}-${{ matrix.python-version }}.log) || true
          (python -c "import platform; print('machine', platform.machine())" >> platform-${{ matrix.os }}-${{ matrix.python-version }}.log) || true
          (python -c "import platform; print('architecture', platform.architecture())" >> platform-${{ matrix.os }}-${{ matrix.python-version }}.log) || true
          (python -c "import platform; print('uname', platform.uname())" >> platform-${{ matrix.os }}-${{ matrix.python-version }}.log) || true
          mkdir ${{ matrix.sample }}-${{ matrix.os }}
          cp build/exe.*/*.{err,log,png} ${{ matrix.sample }}-${{ matrix.os }} || true
          mkdir ${{ matrix.sample }}-${{ matrix.os }}/app-${{ matrix.python-version }}
          cp build/*.app/Contents/MacOS/*.{err,log,png} ${{ matrix.sample }}-${{ matrix.os }}/app-${{ matrix.python-version }} || true
          # use tar to reduce the number of files and speed up the upload
          (cd build/exe.*/; tar cf ../../build-exe-$KEY_BASE.tar *) || true
          (cd build/*.app/; tar cf ../../build-app-$KEY_BASE.tar *) || true
          mv build/*.dmg .. || true

      - name: Upload the snapshots and logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: screensnapshots-${{ matrix.sample }}
          path: |
            ./samples/${{ matrix.sample }}/*-*.log
            ./samples/${{ matrix.sample }}/${{ matrix.sample }}-${{ matrix.os }}/**
            ./samples/${{ matrix.sample }}/*.dmg
            ./samples/${{ matrix.sample }}/*.tar
          if-no-files-found: ignore
